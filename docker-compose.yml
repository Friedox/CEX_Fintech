services:
  frontend:
    build:
      context: .
      dockerfile: frontend/Dockerfile
    ports:
      - "3000:3000"
    volumes:
      - ./frontend/public:/app/frontend/public
      - ./frontend/src:/app/frontend/src
    depends_on:
      - database
      - redis
      - backend

  backend:
    build: ./backend
    ports:
      - "8000:8000"
    # env_file:
    #  - .env  # Load environment variables from the .env file
    environment:
      - APP_CONFIG__DATABASE__DB_USER=${APP_CONFIG__DATABASE__DB_USER}
      - APP_CONFIG__DATABASE__DB_PASSWORD=${APP_CONFIG__DATABASE__DB_PASSWORD}
      - APP_CONFIG__DATABASE__DB_NAME=${APP_CONFIG__DATABASE__DB_NAME}
      - APP_CONFIG__DATABASE__DB_HOST=database
      - APP_CONFIG__REDIS__HOST=redis
    depends_on:
      - database
      - redis


  database:
    image: timescale/timescaledb-ha:pg16
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - ./database/init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5432:5432"
    deploy:
      resources:
        limits:
          memory: 2048M
        reservations:
          memory: 1024M

  redis:
    image: redis:6
    ports:
      - "6379:6379"

networks:
  cex_network:
    driver: bridge