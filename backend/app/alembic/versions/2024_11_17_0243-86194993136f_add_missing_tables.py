"""Add missing tables

Revision ID: 86194993136f
Revises: 648db296d2db
Create Date: 2024-11-17 02:43:20.512791

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = "86194993136f"
down_revision: Union[str, None] = "648db296d2db"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "exchange_wallets",
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column("token_id", sa.UUID(), nullable=False),
        sa.Column(
            "balance", sa.DECIMAL(precision=32, scale=8), nullable=False
        ),
        sa.Column(
            "locked_balance", sa.DECIMAL(precision=32, scale=8), nullable=False
        ),
        sa.Column(
            "created_at",
            sa.TIMESTAMP(),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.ForeignKeyConstraint(
            ["token_id"],
            ["tokens.id"],
            name=op.f("fk_exchange_wallets_token_id_tokens"),
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_exchange_wallets")),
    )
    op.create_table(
        "faucet_logs",
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column("user_id", sa.UUID(), nullable=False),
        sa.Column("token_id", sa.UUID(), nullable=False),
        sa.Column("amount", sa.DECIMAL(precision=32, scale=8), nullable=False),
        sa.Column(
            "created_at",
            sa.TIMESTAMP(),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.ForeignKeyConstraint(
            ["token_id"],
            ["tokens.id"],
            name=op.f("fk_faucet_logs_token_id_tokens"),
        ),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["users.id"],
            name=op.f("fk_faucet_logs_user_id_users"),
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_faucet_logs")),
    )
    op.create_table(
        "trades",
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column("user_id", sa.UUID(), nullable=False),
        sa.Column("token_id", sa.UUID(), nullable=False),
        sa.Column("trade_type", sa.String(length=10), nullable=False),
        sa.Column("amount", sa.DECIMAL(precision=32, scale=8), nullable=False),
        sa.Column("price", sa.DECIMAL(precision=32, scale=8), nullable=False),
        sa.Column(
            "created_at",
            sa.TIMESTAMP(),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.ForeignKeyConstraint(
            ["token_id"], ["tokens.id"], name=op.f("fk_trades_token_id_tokens")
        ),
        sa.ForeignKeyConstraint(
            ["user_id"], ["users.id"], name=op.f("fk_trades_user_id_users")
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_trades")),
    )
    op.create_table(
        "transfers",
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column("sender_id", sa.UUID(), nullable=False),
        sa.Column("receiver_id", sa.UUID(), nullable=False),
        sa.Column("token_id", sa.UUID(), nullable=False),
        sa.Column("amount", sa.DECIMAL(precision=32, scale=8), nullable=False),
        sa.Column(
            "created_at",
            sa.TIMESTAMP(),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.ForeignKeyConstraint(
            ["receiver_id"],
            ["users.id"],
            name=op.f("fk_transfers_receiver_id_users"),
        ),
        sa.ForeignKeyConstraint(
            ["sender_id"],
            ["users.id"],
            name=op.f("fk_transfers_sender_id_users"),
        ),
        sa.ForeignKeyConstraint(
            ["token_id"],
            ["tokens.id"],
            name=op.f("fk_transfers_token_id_tokens"),
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_transfers")),
    )
    op.create_table(
        "user_wallets",
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column("user_id", sa.UUID(), nullable=False),
        sa.Column("token_id", sa.UUID(), nullable=False),
        sa.Column(
            "balance", sa.DECIMAL(precision=32, scale=8), nullable=False
        ),
        sa.Column(
            "locked_balance", sa.DECIMAL(precision=32, scale=8), nullable=False
        ),
        sa.Column(
            "created_at",
            sa.TIMESTAMP(),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.ForeignKeyConstraint(
            ["token_id"],
            ["tokens.id"],
            name=op.f("fk_user_wallets_token_id_tokens"),
        ),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["users.id"],
            name=op.f("fk_user_wallets_user_id_users"),
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_user_wallets")),
    )
    op.drop_table("user_assets")
    op.drop_column("tokens", "description")
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column(
        "tokens",
        sa.Column(
            "description", sa.VARCHAR(), autoincrement=False, nullable=True
        ),
    )
    op.create_table(
        "user_assets",
        sa.Column("id", sa.UUID(), autoincrement=False, nullable=False),
        sa.Column("user_id", sa.UUID(), autoincrement=False, nullable=False),
        sa.Column("token_id", sa.UUID(), autoincrement=False, nullable=False),
        sa.Column(
            "amount",
            sa.NUMERIC(precision=18, scale=8),
            autoincrement=False,
            nullable=False,
        ),
        sa.ForeignKeyConstraint(
            ["token_id"], ["tokens.id"], name="fk_user_assets_token_id_tokens"
        ),
        sa.ForeignKeyConstraint(
            ["user_id"], ["users.id"], name="fk_user_assets_user_id_users"
        ),
        sa.PrimaryKeyConstraint("id", name="pk_user_assets"),
    )
    op.drop_table("user_wallets")
    op.drop_table("transfers")
    op.drop_table("trades")
    op.drop_table("faucet_logs")
    op.drop_table("exchange_wallets")
    # ### end Alembic commands ###
